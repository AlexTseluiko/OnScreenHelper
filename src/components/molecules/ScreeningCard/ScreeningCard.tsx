import React from 'react';
import { Screening } from '@/types/screening';
import { Button } from '@/components/atoms/Button/Button';
import { BookmarkButton } from '@/components/molecules/BookmarkButton/BookmarkButton';
import styles from './ScreeningCard.module.scss';

interface ScreeningCardProps {
  screening: Screening;
  onDetailsClick: (screening: Screening) => void;
  className?: string;
}

const getCategoryIcon = (category: string) => {
  const icons: Record<string, string> = {
    '–û–Ω–∫–æ–ª–æ–≥—ñ—è': 'üéóÔ∏è',
    '–ö–∞—Ä–¥—ñ–æ–ª–æ–≥—ñ—è': '‚ù§Ô∏è',
    '–ï–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥—ñ—è': 'üß¨',
    '–ù–µ–≤—Ä–æ–ª–æ–≥—ñ—è': 'üß†',
    '–û—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥—ñ—è': 'üëÅÔ∏è',
    '–ì—ñ–Ω–µ–∫–æ–ª–æ–≥—ñ—è': 'üå∏',
    '–£—Ä–æ–ª–æ–≥—ñ—è': 'üîµ',
    '–ü—É–ª—å–º–æ–Ω–æ–ª–æ–≥—ñ—è': 'üî¥',
    '–ì–∞—Å—Ç—Ä–æ–µ–Ω—Ç–µ—Ä–æ–ª–æ–≥—ñ—è': 'üü†',
    '–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥—ñ—è': 'üß¥',
    '–û—Ä—Ç–æ–ø–µ–¥—ñ—è': 'ü¶¥',
    '–ü—Å–∏—Ö—ñ–∞—Ç—Ä—ñ—è': 'üßò',
    '–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥—ñ—è': 'ü¶∑',
    '–õ–û–†': 'üëÇ',
    '–†–µ–≤–º–∞—Ç–æ–ª–æ–≥—ñ—è': 'ü§≤',
    '–ù–µ—Ñ—Ä–æ–ª–æ–≥—ñ—è': 'üî∂',
    '–ì–µ–º–∞—Ç–æ–ª–æ–≥—ñ—è': 'ü©∏',
    '–Ü–º—É–Ω–æ–ª–æ–≥—ñ—è': 'üõ°Ô∏è'
  };
  return icons[category] || 'üè•';
};

const getRiskLevelColor = (ageRange: [number, number]) => {
  const avgAge = (ageRange[0] + ageRange[1]) / 2;
  if (avgAge <= 35) return 'low';
  if (avgAge <= 55) return 'medium';
  return 'high';
};

export const ScreeningCard: React.FC<ScreeningCardProps> = ({
  screening,
  onDetailsClick,
  className = ''
}) => {
  const riskLevel = getRiskLevelColor(screening.ageRange);
  const categoryIcon = getCategoryIcon(screening.category);
  
  const classes = [
    styles.card,
    styles[riskLevel],
    className
  ].filter(Boolean).join(' ');

  return (
    <article className={classes}>
      <div className={styles.header}>
        <div className={styles.category}>
          <span className={styles.categoryIcon} role="img" aria-label={screening.category}>
            {categoryIcon}
          </span>
          <span className={styles.categoryText}>{screening.category}</span>
        </div>
        
        <div className={styles.headerActions}>
          <div className={styles.riskBadge}>
            <span className={styles.riskLevel} aria-label={`–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: ${riskLevel}`}>
              {riskLevel === 'low' && 'üü¢'}
              {riskLevel === 'medium' && 'üü°'} 
              {riskLevel === 'high' && 'üî¥'}
            </span>
          </div>
          
          <BookmarkButton 
            screening={screening} 
            size="sm"
            className={styles.bookmarkButton}
          />
        </div>
      </div>

      <div className={styles.content}>
        <h3 className={styles.title}>{screening.title}</h3>
        
        <div className={styles.ageRange}>
          <span className={styles.ageLabel}>–í—ñ–∫:</span>
          <span className={styles.ageValue}>
            {screening.ageRange[0]}‚Äì{screening.ageRange[1]} —Ä–æ–∫—ñ–≤
          </span>
        </div>

        <p className={styles.description}>
          {screening.description.length > 150 
            ? screening.description.substring(0, 150) + '...'
            : screening.description
          }
        </p>

        <div className={styles.metadata}>
          <div className={styles.frequency}>
            <span className={styles.label}>–ß–∞—Å—Ç–æ—Ç–∞:</span>
            <span className={styles.value}>{screening.frequency}</span>
          </div>
          
          <div className={styles.gender}>
            <span className={styles.label}>–°—Ç–∞—Ç—å:</span>
            <span className={styles.value}>
              {screening.targetGender.join(', ')}
            </span>
          </div>
        </div>

        {screening.riskFactors.length > 0 && (
          <div className={styles.riskFactors}>
            <span className={styles.riskFactorsLabel}>–§–∞–∫—Ç–æ—Ä–∏ —Ä–∏–∑–∏–∫—É:</span>
            <div className={styles.riskFactorsList}>
              {screening.riskFactors.slice(0, 2).map((factor, index) => (
                <span key={index} className={styles.riskFactorTag}>
                  {factor}
                </span>
              ))}
              {screening.riskFactors.length > 2 && (
                <span className={styles.moreFactors}>
                  +{screening.riskFactors.length - 2}
                </span>
              )}
            </div>
          </div>
        )}
      </div>

      <div className={styles.actions}>
        <Button
          variant="primary"
          size="sm"
          onClick={() => onDetailsClick(screening)}
          className={styles.detailsButton}
        >
          –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ
        </Button>
      </div>
    </article>
  );
}; 