import React, { useState, useEffect } from 'react';
import { UserProfile } from '@/types/user';
import { Button } from '@/components/atoms/Button/Button';
import { Input } from '@/components/atoms/Input/Input';
import { useToast } from '@/hooks/useToast';
import styles from './ReminderSettings.module.scss';

interface ReminderSettings {
  enableEmailReminders: boolean;
  enablePushNotifications: boolean;
  reminderDaysBefore: number[];
  reminderTime: string;
  emailAddress: string;
  autoScheduleRecommendations: boolean;
  urgentRemindersOnly: boolean;
}

interface ReminderSettingsProps {
  profile: UserProfile;
  onUpdateSettings: (settings: ReminderSettings) => void;
}

export const ReminderSettings: React.FC<ReminderSettingsProps> = ({
  profile,
  onUpdateSettings
}) => {
  const [settings, setSettings] = useState<ReminderSettings>({
    enableEmailReminders: false,
    enablePushNotifications: true,
    reminderDaysBefore: [7, 1],
    reminderTime: '09:00',
    emailAddress: profile.email || '',
    autoScheduleRecommendations: true,
    urgentRemindersOnly: false
  });
  
  const [hasChanges, setHasChanges] = useState(false);
  const { success, info } = useToast();

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ localStorage
  useEffect(() => {
    const savedSettings = localStorage.getItem(`reminder-settings-${profile.id}`);
    if (savedSettings) {
      try {
        const parsed = JSON.parse(savedSettings);
        setSettings(prev => ({ ...prev, ...parsed }));
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:', error);
      }
    }
  }, [profile.id]);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  useEffect(() => {
    const savedSettings = localStorage.getItem(`reminder-settings-${profile.id}`);
    const currentSettingsString = JSON.stringify(settings);
    setHasChanges(savedSettings !== currentSettingsString);
  }, [settings, profile.id]);

  const handleSettingChange = (key: keyof ReminderSettings, value: any) => {
    setSettings(prev => ({
      ...prev,
      [key]: value
    }));
  };

  const handleReminderDaysChange = (days: string) => {
    const daysArray = days.split(',')
      .map(d => parseInt(d.trim()))
      .filter(d => !isNaN(d) && d > 0)
      .sort((a, b) => b - a);
    
    handleSettingChange('reminderDaysBefore', daysArray);
  };

  const handleSaveSettings = () => {
    try {
      localStorage.setItem(
        `reminder-settings-${profile.id}`,
        JSON.stringify(settings)
      );
      onUpdateSettings(settings);
      setHasChanges(false);
      success('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ!');
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:', error);
    }
  };

  const handleTestNotification = () => {
    if (settings.enablePushNotifications && 'Notification' in window) {
      if (Notification.permission === 'granted') {
        new Notification('ü©∫ –¢–µ—Å—Ç–æ–≤–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è MedHelper', {
          body: '–¶–µ –ø—Ä–∏–∫–ª–∞–¥ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –º–µ–¥–∏—á–Ω–∏–π —Å–∫—Ä–∏–Ω—ñ–Ω–≥',
          icon: '/favicon.ico'
        });
        info('–¢–µ—Å—Ç–æ–≤–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!');
      } else if (Notification.permission !== 'denied') {
        Notification.requestPermission().then(permission => {
          if (permission === 'granted') {
            new Notification('ü©∫ –¢–µ—Å—Ç–æ–≤–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è MedHelper', {
              body: '–¶–µ –ø—Ä–∏–∫–ª–∞–¥ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –º–µ–¥–∏—á–Ω–∏–π —Å–∫—Ä–∏–Ω—ñ–Ω–≥',
              icon: '/favicon.ico'
            });
            info('–¢–µ—Å—Ç–æ–≤–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!');
          }
        });
      } else {
        info('–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ');
      }
    } else {
      info('Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ –∞–±–æ –≤–∏–º–∫–Ω–µ–Ω—ñ');
    }
  };

  const handleResetSettings = () => {
    const defaultSettings: ReminderSettings = {
      enableEmailReminders: false,
      enablePushNotifications: true,
      reminderDaysBefore: [7, 1],
      reminderTime: '09:00',
      emailAddress: profile.email || '',
      autoScheduleRecommendations: true,
      urgentRemindersOnly: false
    };
    
    setSettings(defaultSettings);
    localStorage.removeItem(`reminder-settings-${profile.id}`);
    info('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∫–∏–Ω—É—Ç–æ –¥–æ —Ç–∏–ø–æ–≤–∏—Ö');
  };

  return (
    <div className={styles.reminderSettings}>
      <div className={styles.header}>
        <h2>üîî –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å</h2>
        <p>–ö–µ—Ä—É–π—Ç–µ —Å–ø–æ—Å–æ–±–∞–º–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –ø—Ä–æ –º–µ–¥–∏—á–Ω—ñ —Å–∫—Ä–∏–Ω—ñ–Ω–≥–∏</p>
      </div>

      <div className={styles.settingsGrid}>
        {/* –û—Å–Ω–æ–≤–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
        <div className={styles.settingsCard}>
          <h3>üì± –°–ø–æ—Å–æ–±–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å</h3>
          
          <div className={styles.setting}>
            <label className={styles.checkboxLabel}>
              <input
                type="checkbox"
                checked={settings.enablePushNotifications}
                onChange={(e) => handleSettingChange('enablePushNotifications', e.target.checked)}
              />
              <span className={styles.checkboxCustom}></span>
              <div className={styles.labelContent}>
                <strong>Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è</strong>
                <span>–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –±—Ä–∞—É–∑–µ—Ä—ñ</span>
              </div>
            </label>
          </div>

          <div className={styles.setting}>
            <label className={styles.checkboxLabel}>
              <input
                type="checkbox"
                checked={settings.enableEmailReminders}
                onChange={(e) => handleSettingChange('enableEmailReminders', e.target.checked)}
              />
              <span className={styles.checkboxCustom}></span>
              <div className={styles.labelContent}>
                <strong>Email –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è</strong>
                <span>–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞ –ø–æ—à—Ç—É</span>
              </div>
            </label>
          </div>

          {settings.enableEmailReminders && (
            <div className={styles.emailSection}>
              <Input
                type="email"
                label="Email –∞–¥—Ä–µ—Å–∞"
                value={settings.emailAddress}
                onChange={(e) => handleSettingChange('emailAddress', e.target.value)}
                placeholder="your@email.com"
              />
            </div>
          )}
        </div>

        {/* –ß–∞—Å–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
        <div className={styles.settingsCard}>
          <h3>‚è∞ –ß–∞—Å –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å</h3>
          
          <div className={styles.setting}>
            <Input
              type="time"
              label="–ß–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å"
              value={settings.reminderTime}
              onChange={(e) => handleSettingChange('reminderTime', e.target.value)}
            />
          </div>

          <div className={styles.setting}>
            <label className={styles.label}>–ó–∞ —Å–∫—ñ–ª—å–∫–∏ –¥–Ω—ñ–≤ –Ω–∞–≥–∞–¥—É–≤–∞—Ç–∏:</label>
            <Input
              type="text"
              value={settings.reminderDaysBefore.join(', ')}
              onChange={(e) => handleReminderDaysChange(e.target.value)}
              placeholder="7, 3, 1"
              helperText="–í–≤–µ–¥—ñ—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 7, 3, 1)"
            />
          </div>

          <div className={styles.reminderPreview}>
            <h4>üìÖ –ü—Ä–∏–∫–ª–∞–¥ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å:</h4>
            <div className={styles.previewList}>
              {settings.reminderDaysBefore.map(days => (
                <div key={days} className={styles.previewItem}>
                  <span className={styles.previewIcon}>üîî</span>
                  <span>–ó–∞ {days} {days === 1 ? '–¥–µ–Ω—å' : days < 5 ? '–¥–Ω—ñ' : '–¥–Ω—ñ–≤'} –æ {settings.reminderTime}</span>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
        <div className={styles.settingsCard}>
          <h3>‚öôÔ∏è –î–æ–¥–∞—Ç–∫–æ–≤–æ</h3>
          
          <div className={styles.setting}>
            <label className={styles.checkboxLabel}>
              <input
                type="checkbox"
                checked={settings.autoScheduleRecommendations}
                onChange={(e) => handleSettingChange('autoScheduleRecommendations', e.target.checked)}
              />
              <span className={styles.checkboxCustom}></span>
              <div className={styles.labelContent}>
                <strong>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è</strong>
                <span>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –¥–æ–¥–∞–≤–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä</span>
              </div>
            </label>
          </div>

          <div className={styles.setting}>
            <label className={styles.checkboxLabel}>
              <input
                type="checkbox"
                checked={settings.urgentRemindersOnly}
                onChange={(e) => handleSettingChange('urgentRemindersOnly', e.target.checked)}
              />
              <span className={styles.checkboxCustom}></span>
              <div className={styles.labelContent}>
                <strong>–¢—ñ–ª—å–∫–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ</strong>
                <span>–ù–∞–≥–∞–¥—É–≤–∞—Ç–∏ –ª–∏—à–µ –ø—Ä–æ –≤–∏—Å–æ–∫–æ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω—ñ —Å–∫—Ä–∏–Ω—ñ–Ω–≥–∏</span>
              </div>
            </label>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å */}
        <div className={styles.settingsCard}>
          <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å</h3>
          
          <div className={styles.statsGrid}>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>
                {settings.reminderDaysBefore.length}
              </span>
              <span className={styles.statLabel}>–ù–∞–≥–∞–¥—É–≤–∞–Ω—å –Ω–∞ —Å–∫—Ä–∏–Ω—ñ–Ω–≥</span>
            </div>
            
            <div className={styles.statItem}>
              <span className={styles.statNumber}>
                {profile.medicalHistory?.lastCheckups?.length || 0}
              </span>
              <span className={styles.statLabel}>–ó–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Å–∫—Ä–∏–Ω—ñ–Ω–≥—ñ–≤</span>
            </div>
            
            <div className={styles.statItem}>
              <span className={styles.statNumber}>
                {settings.enablePushNotifications && settings.enableEmailReminders ? '2' : 
                 settings.enablePushNotifications || settings.enableEmailReminders ? '1' : '0'}
              </span>
              <span className={styles.statLabel}>–ê–∫—Ç–∏–≤–Ω–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤</span>
            </div>
          </div>
        </div>
      </div>

      {/* –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –∫–µ—Ä—É–≤–∞–Ω–Ω—è */}
      <div className={styles.actions}>
        <div className={styles.testSection}>
          <h4>üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å</h4>
          <p>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —è–∫ –ø—Ä–∞—Ü—é—é—Ç—å –≤–∞—à—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</p>
          <Button
            variant="outline"
            onClick={handleTestNotification}
            disabled={!settings.enablePushNotifications}
          >
            –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
          </Button>
        </div>

        <div className={styles.controlButtons}>
          <Button
            variant="ghost"
            onClick={handleResetSettings}
          >
            –°–∫–∏–Ω—É—Ç–∏ –¥–æ —Ç–∏–ø–æ–≤–∏—Ö
          </Button>
          
          <Button
            variant="primary"
            onClick={handleSaveSettings}
            disabled={!hasChanges}
          >
            {hasChanges ? '–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏' : '–ó–±–µ—Ä–µ–∂–µ–Ω–æ'}
          </Button>
        </div>
      </div>

      {/* –ü–æ—Ä–∞–¥–∏ */}
      <div className={styles.tips}>
        <h4>üí° –ü–æ—Ä–∞–¥–∏ —â–æ–¥–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å</h4>
        <div className={styles.tipsList}>
          <div className={styles.tip}>
            <span className={styles.tipIcon}>üéØ</span>
            <span>–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∫—ñ–ª—å–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å (7, 3, 1 –¥–µ–Ω—å) –¥–ª—è –≤–∞–∂–ª–∏–≤–∏—Ö —Å–∫—Ä–∏–Ω—ñ–Ω–≥—ñ–≤</span>
          </div>
          <div className={styles.tip}>
            <span className={styles.tipIcon}>‚è∞</span>
            <span>–û–±–µ—Ä—ñ—Ç—å –∑—Ä—É—á–Ω–∏–π —á–∞—Å –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å, –∫–æ–ª–∏ –≤–∏ –∑–∞–∑–≤–∏—á–∞–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω</span>
          </div>
          <div className={styles.tip}>
            <span className={styles.tipIcon}>üìß</span>
            <span>Email –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å–Ω—ñ –¥–ª—è –¥–æ–≤–≥–æ—Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è</span>
          </div>
          <div className={styles.tip}>
            <span className={styles.tipIcon}>üö®</span>
            <span>–£–≤—ñ–º–∫–Ω—ñ—Ç—å "–¢—ñ–ª—å–∫–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ", —è–∫—â–æ –æ—Ç—Ä–∏–º—É—î—Ç–µ –∑–∞–±–∞–≥–∞—Ç–æ —Å–ø–æ–≤—ñ—â–µ–Ω—å</span>
          </div>
        </div>
      </div>
    </div>
  );
}; 