import React, { useState, useEffect } from 'react';
import { Button } from '@/components/atoms/Button/Button';
import styles from './GeolocationRequest.module.scss';

interface GeolocationRequestProps {
  onLocationGranted: (position: GeolocationPosition) => void;
  onLocationDenied: () => void;
  className?: string;
}

type LocationPermissionState = 'unknown' | 'requesting' | 'granted' | 'denied' | 'unavailable';

export const GeolocationRequest: React.FC<GeolocationRequestProps> = ({
  onLocationGranted,
  onLocationDenied,
  className = ''
}) => {
  const [permissionState, setPermissionState] = useState<LocationPermissionState>('unknown');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [manualLocation, setManualLocation] = useState('');

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó
  useEffect(() => {
    if (!navigator.geolocation) {
      setPermissionState('unavailable');
    } else {
      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É –¥–æ–∑–≤–æ–ª—É
      if (navigator.permissions) {
        navigator.permissions.query({ name: 'geolocation' }).then((result) => {
          setPermissionState(result.state as LocationPermissionState);
        });
      }
    }
  }, []);

  const requestLocation = async () => {
    if (!navigator.geolocation) {
      setError('–ì–µ–æ–ª–æ–∫–∞—Ü—ñ—è –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –≤–∞—à–∏–º –ø—Ä–∏—Å—Ç—Ä–æ—î–º');
      setPermissionState('unavailable');
      return;
    }

    setIsLoading(true);
    setError(null);
    setPermissionState('requesting');

    const options: PositionOptions = {
      enableHighAccuracy: true,
      timeout: 10000,
      maximumAge: 60000 // 1 —Ö–≤–∏–ª–∏–Ω–∞
    };

    navigator.geolocation.getCurrentPosition(
      (position) => {
        setIsLoading(false);
        setPermissionState('granted');
        onLocationGranted(position);
      },
      (error) => {
        setIsLoading(false);
        setPermissionState('denied');
        
        switch (error.code) {
          case error.PERMISSION_DENIED:
            setError('–î–æ—Å—Ç—É–ø –¥–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –¥–æ–∑–≤–æ–ª—å—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –±—Ä–∞—É–∑–µ—Ä–∞.');
            break;
          case error.POSITION_UNAVAILABLE:
            setError('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤–∞—à–µ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è.');
            break;
          case error.TIMEOUT:
            setError('–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ —á–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
            break;
          default:
            setError('–í–∏–Ω–∏–∫–ª–∞ –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó.');
            break;
        }
        onLocationDenied();
      },
      options
    );
  };

  const handleManualLocationSubmit = () => {
    if (manualLocation.trim()) {
      // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –≥–µ–æ–∫–æ–¥—É–≤–∞–Ω–Ω—è –∞–¥—Ä–µ—Å–∏
      console.log('Manual location:', manualLocation);
      // –ü–æ–∫–∏ —â–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ –≤—ñ–¥–º–æ–≤—É –≤—ñ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó
      onLocationDenied();
    }
  };

  if (permissionState === 'granted') {
    return (
      <div className={`${styles.container} ${className}`}>
        <div className={styles.successMessage}>
          <div className={styles.icon}>‚úÖ</div>
          <h3>–ì–µ–æ–ª–æ–∫–∞—Ü—ñ—è –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞</h3>
          <p>–ü–æ–∫–∞–∑—É—î–º–æ –º–µ–¥–∏—á–Ω—ñ –∑–∞–∫–ª–∞–¥–∏ –ø–æ—Ä—É—á –∑ –≤–∞–º–∏</p>
        </div>
      </div>
    );
  }

  if (permissionState === 'unavailable') {
    return (
      <div className={`${styles.container} ${className}`}>
        <div className={styles.unavailableMessage}>
          <div className={styles.icon}>‚ùå</div>
          <h3>–ì–µ–æ–ª–æ–∫–∞—Ü—ñ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h3>
          <p>–í–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è</p>
          
          <div className={styles.manualInput}>
            <h4>–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ –∞–±–æ –∞–¥—Ä–µ—Å—É:</h4>
            <div className={styles.inputGroup}>
              <input
                type="text"
                value={manualLocation}
                onChange={(e) => setManualLocation(e.target.value)}
                placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ö–∏—ó–≤, –≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫"
                className={styles.locationInput}
              />
              <Button onClick={handleManualLocationSubmit}>
                –ü–æ—à—É–∫
              </Button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className={`${styles.container} ${className}`}>
      <div className={styles.requestCard}>
        <div className={styles.icon}>üìç</div>
        <h3>–î–æ–∑–≤–æ–ª—å—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó</h3>
        <p>
          –©–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞–π–±–ª–∏–∂—á—ñ –º–µ–¥–∏—á–Ω—ñ –∑–∞–∫–ª–∞–¥–∏, –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω –¥–æ—Å—Ç—É–ø –¥–æ –≤–∞—à–æ–≥–æ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è. 
          –í–∞—à—ñ –¥–∞–Ω—ñ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–∏–º–∏ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ø–æ—à—É–∫—É.
        </p>

        {error && (
          <div className={styles.errorMessage}>
            <div className={styles.errorIcon}>‚ö†Ô∏è</div>
            <p>{error}</p>
          </div>
        )}

        <div className={styles.benefits}>
          <div className={styles.benefit}>
            <span className={styles.benefitIcon}>üéØ</span>
            <span>–¢–æ—á–Ω–∏–π –ø–æ—à—É–∫ –ø–æ—Ä—É—á –∑ –≤–∞–º–∏</span>
          </div>
          <div className={styles.benefit}>
            <span className={styles.benefitIcon}>‚è±Ô∏è</span>
            <span>–®–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –º–µ–¥–∏—á–Ω–∏—Ö –∑–∞–∫–ª–∞–¥—ñ–≤</span>
          </div>
          <div className={styles.benefit}>
            <span className={styles.benefitIcon}>üîí</span>
            <span>–í–∞—à–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å –∑–∞—Ö–∏—â–µ–Ω–∞</span>
          </div>
        </div>

        <div className={styles.actions}>
          <Button
            onClick={requestLocation}
            loading={isLoading}
            disabled={isLoading}
            className={styles.primaryButton}
          >
            {isLoading ? '–í–∏–∑–Ω–∞—á–∞—î–º–æ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è...' : '–î–æ–∑–≤–æ–ª–∏—Ç–∏ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é'}
          </Button>
          
          <button 
            onClick={onLocationDenied}
            className={styles.skipButton}
            disabled={isLoading}
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ (–≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∫–∞—Ä—Ç—É –±–µ–∑ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó)
          </button>
        </div>

        <div className={styles.manualInput}>
          <h4>–ê–±–æ –≤–≤–µ–¥—ñ—Ç—å –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—Ä—É—á–Ω—É:</h4>
          <div className={styles.inputGroup}>
            <input
              type="text"
              value={manualLocation}
              onChange={(e) => setManualLocation(e.target.value)}
              placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ö–∏—ó–≤, –õ—å–≤—ñ–≤, –û–¥–µ—Å–∞..."
              className={styles.locationInput}
            />
            <Button 
              onClick={handleManualLocationSubmit}
              variant="secondary"
              disabled={!manualLocation.trim()}
            >
              –ü–æ—à—É–∫
            </Button>
          </div>
        </div>

        {permissionState === 'denied' && (
          <div className={styles.permissionHelp}>
            <h4>–Ø–∫ —É–≤—ñ–º–∫–Ω—É—Ç–∏ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é:</h4>
            <ol>
              <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —ñ–∫–æ–Ω–∫—É –∑–∞–º–∫–∞ –±—ñ–ª—è –∞–¥—Ä–µ—Å–Ω–æ–≥–æ —Ä—è–¥–∫–∞</li>
              <li>–û–±–µ—Ä—ñ—Ç—å "–î–æ–∑–≤–æ–ª–∏—Ç–∏" –¥–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó</li>
              <li>–û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É</li>
            </ol>
          </div>
        )}
      </div>
    </div>
  );
}; 