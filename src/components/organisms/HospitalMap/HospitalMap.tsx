import React, { useMemo } from 'react';
import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
import { Icon } from 'leaflet';
import { Hospital } from '@/types/hospital';
import styles from './HospitalMap.module.scss';
import 'leaflet/dist/leaflet.css';

// –ò–∫–æ–Ω–∫–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ä–æ–≤ –±–æ–ª—å–Ω–∏—Ü
const hospitalIcon = new Icon({
  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',
  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowSize: [41, 41]
});

interface HospitalMapProps {
  hospitals: Hospital[];
  userLocation?: [number, number];
  onSelectHospital?: (hospital: Hospital) => void;
}

export const HospitalMap: React.FC<HospitalMapProps> = ({ 
  hospitals, 
  userLocation, 
  onSelectHospital 
}) => {
  // –¶–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ —Ü–µ–Ω—Ç—Ä –ö–∏–µ–≤–∞
  const mapCenter = userLocation || [50.4501, 30.5234];

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±–æ–ª—å–Ω–∏—Ü (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
  const filteredHospitals = useMemo(() => {
    return hospitals;
  }, [hospitals]);

  return (
    <div className={styles.hospitalMap}>
      <div className={styles.mapHeader}>
        <h3>üè• –ú–µ–¥–∏—á–Ω—ñ –∑–∞–∫–ª–∞–¥–∏ –ø–æ—Ä—É—á</h3>
        <p>–ó–Ω–∞–π–¥–µ–Ω–æ {filteredHospitals.length} –∑–∞–∫–ª–∞–¥—ñ–≤</p>
      </div>
      
      <div className={styles.mapContainer}>
        <MapContainer
          center={mapCenter}
          zoom={12}
          style={{ height: '100%', width: '100%' }}
        >
          <TileLayer
            attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
          />
          
          {/* –ú–∞—Ä–∫–µ—Ä—ã –±–æ–ª—å–Ω–∏—Ü */}
          {filteredHospitals.map((hospital: Hospital) => (
            <Marker
              key={hospital.id}
              position={hospital.coordinates}
              icon={hospitalIcon}
              eventHandlers={{
                click: () => onSelectHospital?.(hospital)
              }}
            >
              <Popup>
                <div className={styles.popupContent}>
                  <h4>{hospital.name}</h4>
                  <p><strong>–¢–∏–ø:</strong> {hospital.type}</p>
                  <p><strong>–ê–¥—Ä–µ—Å–∞:</strong> {hospital.address}</p>
                  <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {hospital.phone}</p>
                  <p><strong>–†–µ–π—Ç–∏–Ω–≥:</strong> {'‚≠ê'.repeat(Math.round(hospital.rating))} ({hospital.rating})</p>
                  <p><strong>–î–æ—Å—Ç—É–ø–Ω—ñ —Å–∫—Ä–∏–Ω—ñ–Ω–≥–∏:</strong> {hospital.availableScreenings.length}</p>
                  {hospital.distance && (
                    <p><strong>–í—ñ–¥—Å—Ç–∞–Ω—å:</strong> {hospital.distance.toFixed(1)} –∫–º</p>
                  )}
                </div>
              </Popup>
            </Marker>
          ))}
          
          {/* –ú–∞—Ä–∫–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          {userLocation && (
            <Marker position={userLocation}>
              <Popup>
                <div className={styles.popupContent}>
                  <h4>üìç –í–∞—à–µ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è</h4>
                  <p>–¢—É—Ç –≤–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –∑–∞—Ä–∞–∑</p>
                </div>
              </Popup>
            </Marker>
          )}
        </MapContainer>
      </div>
    </div>
  );
}; 