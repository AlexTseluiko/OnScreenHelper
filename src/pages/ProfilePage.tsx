import React, { useState, useEffect } from 'react';
import { useUser } from '@/context/UserContext';
import { useScreening } from '@/context/ScreeningContext';
import { ProfileForm } from '@/components/organisms/ProfileForm/ProfileForm';
import { Button } from '@/components/atoms/Button/Button';
import { PersonalizedRecommendation } from '@/types/user';
import styles from './ProfilePage.module.scss';

export const ProfilePage: React.FC = () => {
  const { state: userState, generateRecommendations, getAge, deleteProfile } = useUser();
  const { state: screeningState } = useScreening();
  const [showForm, setShowForm] = useState(false);
  const [isEditing, setIsEditing] = useState(false);

  // –ì–µ–Ω–µ—Ä—É—î–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∫–æ–ª–∏ –ø—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —Ç–∞ —Å–∫—Ä–∏–Ω—ñ–Ω–≥–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ
  useEffect(() => {
    if (userState.profile && screeningState.screenings.length > 0) {
      generateRecommendations(screeningState.screenings);
    }
  }, [userState.profile, screeningState.screenings]);

  // –Ø–∫—â–æ –ø—Ä–æ—Ñ—ñ–ª—å –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π, –ø–æ–∫–∞–∑—É—î–º–æ —Ñ–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
  if (!userState.profile && !showForm) {
    return (
      <div className={styles.profilePage}>
        <div className={styles.welcomeCard}>
          <div className={styles.welcomeIcon}>üëã</div>
          <h1>–í—ñ—Ç–∞—î–º–æ –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º—É –º–µ–¥–∏—á–Ω–æ–º—É –ø–æ–º—ñ—á–Ω–∏–∫—É!</h1>
          <p>
            –°—Ç–≤–æ—Ä—ñ—Ç—å —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å, —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó 
            —â–æ–¥–æ –º–µ–¥–∏—á–Ω–∏—Ö —Å–∫—Ä–∏–Ω—ñ–Ω–≥—ñ–≤ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–æ–≥–æ –≤—ñ–∫—É, —Å—Ç–∞—Ç—ñ —Ç–∞ –º–µ–¥–∏—á–Ω–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó.
          </p>
          
          <div className={styles.benefits}>
            <div className={styles.benefit}>
              <span className={styles.benefitIcon}>üéØ</span>
              <div>
                <h3>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</h3>
                <p>–û—Ç—Ä–∏–º—É–π—Ç–µ —Å–∫—Ä–∏–Ω—ñ–Ω–≥–∏, —â–æ –ø—ñ–¥—Ö–æ–¥—è—Ç—å —Å–∞–º–µ –≤–∞–º</p>
              </div>
            </div>
            
            <div className={styles.benefit}>
              <span className={styles.benefitIcon}>üìÖ</span>
              <div>
                <h3>–ö–∞–ª–µ–Ω–¥–∞—Ä –∑–¥–æ—Ä–æ–≤'—è</h3>
                <p>–ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è —Ç–∞ —Ç—Ä–µ–∫—ñ–Ω–≥ –º–µ–¥–∏—á–Ω–∏—Ö –æ–±—Å—Ç–µ–∂–µ–Ω—å</p>
              </div>
            </div>
            
            <div className={styles.benefit}>
              <span className={styles.benefitIcon}>üîí</span>
              <div>
                <h3>–ü—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö</h3>
                <p>–í—Å—ñ –¥–∞–Ω—ñ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –Ω–∞ –≤–∞—à–æ–º—É –ø—Ä–∏—Å—Ç—Ä–æ—ó</p>
              </div>
            </div>
          </div>
          
          <Button
            variant="primary"
            size="lg"
            onClick={() => setShowForm(true)}
            className={styles.createButton}
          >
            ‚ú® –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å
          </Button>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ —Ñ–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è/—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
  if (showForm) {
    return (
      <div className={styles.profilePage}>
        <ProfileForm
          isEditing={isEditing}
          onComplete={() => {
            setShowForm(false);
            setIsEditing(false);
          }}
        />
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å —Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
  const profile = userState.profile!;
  const age = getAge();

  const handleEditProfile = () => {
    setIsEditing(true);
    setShowForm(true);
  };

  const handleDeleteProfile = () => {
    if (window.confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å? –í—Å—ñ –¥–∞–Ω—ñ –±—É–¥–µ –≤—Ç—Ä–∞—á–µ–Ω–æ.')) {
      deleteProfile();
    }
  };

  const getPriorityIcon = (priority: PersonalizedRecommendation['priority']) => {
    switch (priority) {
      case '–≤–∏—Å–æ–∫–∞': return 'üî¥';
      case '—Å–µ—Ä–µ–¥–Ω—è': return 'üü°';
      case '–Ω–∏–∑—å–∫–∞': return 'üü¢';
    }
  };

  return (
    <div className={styles.profilePage}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—Ñ—ñ–ª—é */}
      <div className={styles.profileHeader}>
        <div className={styles.profileInfo}>
          <div className={styles.avatar}>
            {profile.gender === '—á–æ–ª–æ–≤—ñ—á–∏–π' ? 'üë®' : 'üë©'}
          </div>
          <div className={styles.basicInfo}>
            <h1>{profile.name}</h1>
            <p className={styles.ageGender}>
              {age} —Ä–æ–∫—ñ–≤, {profile.gender}
            </p>
            <p className={styles.profileDate}>
              –ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ: {new Date(profile.createdAt).toLocaleDateString('uk-UA')}
            </p>
          </div>
        </div>
        
        <div className={styles.profileActions}>
          <Button
            variant="ghost"
            onClick={handleEditProfile}
          >
            ‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
          </Button>
          <Button
            variant="ghost"
            onClick={handleDeleteProfile}
            className={styles.deleteButton}
          >
            üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
          </Button>
        </div>
      </div>

      {/* –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó */}
      <div className={styles.recommendationsSection}>
        <div className={styles.sectionHeader}>
          <h2>üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</h2>
          <p>–ù–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é —Ç–∞ –º–µ–¥–∏—á–Ω–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó</p>
        </div>

        {userState.recommendations.length === 0 ? (
          <div className={styles.noRecommendations}>
            <div className={styles.noRecommendationsIcon}>üåü</div>
            <h3>–í—ñ–¥–º—ñ–Ω–Ω–æ!</h3>
            <p>–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ–º–∞—î –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π –¥–ª—è —Å–∫—Ä–∏–Ω—ñ–Ω–≥—ñ–≤.</p>
          </div>
        ) : (
          <div className={styles.recommendationsList}>
            {userState.recommendations.slice(0, 6).map((recommendation, index) => (
              <div 
                key={`${recommendation.screening.id}-${index}`}
                className={`${styles.recommendationCard} ${styles[recommendation.priority]}`}
              >
                <div className={styles.recommendationHeader}>
                  <div className={styles.priorityBadge}>
                    <span className={styles.priorityIcon}>
                      {getPriorityIcon(recommendation.priority)}
                    </span>
                    <span className={styles.priorityText}>
                      {recommendation.priority} –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç
                    </span>
                  </div>
                  {recommendation.isOverdue && (
                    <span className={styles.overdueFlag}>‚è∞ –ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–æ</span>
                  )}
                </div>
                
                <h3 className={styles.recommendationTitle}>
                  {recommendation.screening.title}
                </h3>
                
                <p className={styles.recommendationCategory}>
                  {recommendation.screening.category}
                </p>
                
                <p className={styles.recommendationReason}>
                  {recommendation.reason}
                </p>
                
                <div className={styles.recommendationFooter}>
                  <div className={styles.nextDate}>
                    <span className={styles.label}>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –¥–∞—Ç–∞:</span>
                    <span className={styles.date}>
                      {new Date(recommendation.nextRecommendedDate).toLocaleDateString('uk-UA')}
                    </span>
                  </div>
                  
                  <div className={styles.frequency}>
                    <span className={styles.label}>–ß–∞—Å—Ç–æ—Ç–∞:</span>
                    <span className={styles.value}>{recommendation.frequency}</span>
                  </div>
                </div>
                
                <div className={styles.riskScore}>
                  <div className={styles.riskBar}>
                    <div 
                      className={styles.riskFill}
                      style={{ width: `${Math.min(100, recommendation.riskScore)}%` }}
                    />
                  </div>
                  <span className={styles.riskText}>
                    –†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: {recommendation.riskScore}/100
                  </span>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* –ú–µ–¥–∏—á–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è */}
      <div className={styles.medicalHistorySection}>
        <h2>üè• –ú–µ–¥–∏—á–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è</h2>
        
        <div className={styles.historyGrid}>
          {profile.medicalHistory.chronicDiseases.length > 0 && (
            <div className={styles.historyCard}>
              <h3>ü©∫ –•—Ä–æ–Ω—ñ—á–Ω—ñ –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω–Ω—è</h3>
              <div className={styles.tagList}>
                {profile.medicalHistory.chronicDiseases.map(disease => (
                  <span key={disease} className={styles.tag}>
                    {disease}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {profile.medicalHistory.riskFactors.length > 0 && (
            <div className={styles.historyCard}>
              <h3>‚ö†Ô∏è –§–∞–∫—Ç–æ—Ä–∏ —Ä–∏–∑–∏–∫—É</h3>
              <div className={styles.tagList}>
                {profile.medicalHistory.riskFactors.map(factor => (
                  <span key={factor} className={styles.tag}>
                    {factor}
                  </span>
                ))}
              </div>
            </div>
          )}
          
          {profile.medicalHistory.familyHistory.length > 0 && (
            <div className={styles.historyCard}>
              <h3>üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°—ñ–º–µ–π–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è</h3>
              <div className={styles.familyList}>
                {profile.medicalHistory.familyHistory.map((family, index) => (
                  <div key={index} className={styles.familyItem}>
                    <strong>{family.relation}:</strong> {family.diseases.join(', ')}
                  </div>
                ))}
              </div>
            </div>
          )}
          
          {profile.medicalHistory.lastCheckups.length > 0 && (
            <div className={styles.historyCard}>
              <h3>üìã –û—Å—Ç–∞–Ω–Ω—ñ –æ–±—Å—Ç–µ–∂–µ–Ω–Ω—è</h3>
              <div className={styles.checkupList}>
                {profile.medicalHistory.lastCheckups.slice(-3).map((checkup, index) => (
                  <div key={index} className={styles.checkupItem}>
                    <div className={styles.checkupDate}>
                      {new Date(checkup.date).toLocaleDateString('uk-UA')}
                    </div>
                    <div className={styles.checkupResult}>
                      {checkup.result === '–Ω–æ—Ä–º–∞–ª—å–Ω–∏–π' && '‚úÖ'}
                      {checkup.result === '–ø–æ—Ç—Ä–µ–±—É—î —É–≤–∞–≥–∏' && '‚ö†Ô∏è'}
                      {checkup.result === '–≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è' && '‚ùå'}
                      {checkup.result}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>

      {/* –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
      <div className={styles.preferencesSection}>
        <h2>‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h2>
        
        <div className={styles.preferencesGrid}>
          <div className={styles.preferenceCard}>
            <h3>üîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è</h3>
            <p>
              {profile.preferences.reminderSettings.enabled 
                ? `–£–≤—ñ–º–∫–Ω–µ–Ω–æ (–∑–∞ ${profile.preferences.reminderSettings.beforeDays} –¥–Ω—ñ–≤)` 
                : '–í–∏–º–∫–Ω–µ–Ω–æ'
              }
            </p>
          </div>
          
          <div className={styles.preferenceCard}>
            <h3>üéØ –£–ª—é–±–ª–µ–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</h3>
            <div className={styles.categoryList}>
              {profile.preferences.preferredCategories.length > 0 
                ? profile.preferences.preferredCategories.slice(0, 3).join(', ')
                : '–ù–µ –æ–±—Ä–∞–Ω–æ'
              }
              {profile.preferences.preferredCategories.length > 3 && 
                ` —Ç–∞ —â–µ ${profile.preferences.preferredCategories.length - 3}`
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}; 